#include <iostream>
#include <ctime>

using namespace std;

void Bubble_sorted(int *mass, int a, int &number_mass)
{
	int permutations = 0;
	cout << "Ќачальный массив: ";


	if (number_mass < 1 || number_mass>2)
	{
		for (int i = 0; i < a; i++) {
			mass[i] = rand() % 1000; // "читаем" элементы в массив	
		}
		
	}
	++number_mass;

	for (int i = 0; i < a; i++) {
		cout << mass[i] << " ";
	}

	cout << endl;

	
	for (int i = 0; i < a; i++) {
		for (int j = 0; j < a - 1; j++) {
			if (mass[j] > mass[j + 1]) {
				++permutations;
				int b = mass[j]; // создали дополнительную переменную
				mass[j] = mass[j + 1]; // мен€ем местами
				mass[j + 1] = b; // значени€ элементов
			}
		}
	}
	

	cout << "ќтсортированный массив: ";
	for (int i = 0; i < a; i++) {
		cout << mass[i] << " ";
	}
	cout << endl;
	cout << " оличество перестановок: " << permutations<< endl;
	cout << "¬рем€ сортировки: " << clock()<<endl;
	system("pause");
}

int main() {
	setlocale(LC_ALL, "rus");
	srand(time(NULL));
	int a = 10;
	int number_mass = 0;
	int random_array[10]; // рандомный массив
	int almost_sorted[10] = { 1,2,4,3,5,6,7,8,9,10 }; // почти отсортированный
	int reverse_sorted[10] = { 9,8,7,6,5,4,3,2,1,0 }; // отсортированный в обратном пор€дке
	int one_hundred_thousand_elements[10000]; //массив на 10000 элементов

	Bubble_sorted(random_array, a, number_mass);
	Bubble_sorted(almost_sorted, a, number_mass);
	Bubble_sorted(reverse_sorted, a, number_mass);
	a = 10000;
	Bubble_sorted(ten_thousand_elements, a, number_mass);

	cout << endl;
	system("pause");
	return 0;
}